# Update APT cache
- name: Update APT cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 86400

# Install Prometheus Node Exporter
- name: Install Prometheus Node Exporter
  ansible.builtin.apt:
    name: prometheus-node-exporter
    state: present
    update_cache: yes

# Ensure Prometheus Node Exporter is running and enabled
- name: Ensure Prometheus Node Exporter service is running
  ansible.builtin.service:
    name: prometheus-node-exporter
    state: started
    enabled: true

- name: Ensure rsyslog is installed
  ansible.builtin.apt:
    name: rsyslog
    state: present
    update_cache: yes

# Copy rsyslog configuration for Telegraf
- name: Copy rsyslog configuration for Telegraf
  ansible.builtin.template:
    src: 50-telegraf.conf.j2
    dest: /etc/rsyslog.d/50-telegraf.conf
    owner: root
    group: root
    mode: '0644'

# Restart rsyslog
- name: Restart rsyslog
  ansible.builtin.service:
    name: rsyslog
    state: restarted
    enabled: true

# Ensure backup user exists with the correct home directory
- name: Ensure backup user exists with the correct home directory
  ansible.builtin.user:
    name: backup
    home: /home/backup
    shell: /bin/bash
    state: present
    create_home: yes

# Ensure .ssh directory exists for backup user
- name: Ensure .ssh directory exists for backup user
  ansible.builtin.file:
    path: /home/backup/.ssh
    state: directory
    owner: backup
    group: backup
    mode: '0700'

# Generate SSH key pair for backup user
- name: Generate SSH key pair for backup user
  ansible.builtin.openssh_keypair:
    path: /home/backup/.ssh/id_rsa
    owner: backup
    group: backup
    mode: '0600'
    type: rsa
    size: 2048
  register: ssh_keypair

# Copy the public key to the control node
- name: Set permissions on the public key file
  ansible.builtin.file:
    path: /home/backup/.ssh/id_rsa.pub
    owner: backup
    group: backup
    mode: '0644'

# Ensure known_hosts file exists for backup user
- name: Ensure known_hosts file exists for backup user
  ansible.builtin.template:
    src: known-hosts.j2
    dest: /home/backup/.ssh/known_hosts
    owner: backup
    group: backup
    mode: '0644'

# Ensure backup user can access backup server without prompts
- name: Ensure backup user can access backup server without prompts
  ansible.builtin.command:
    cmd: ssh-keyscan -t ed25519 {{ backup_server_ip }}
  register: ssh_keyscan_result
  changed_when: false

# Add backup server to known_hosts
- name: Add backup server to known_hosts
  ansible.builtin.template:
    src: known-hosts.j2
    dest: /home/backup/.ssh/known_hosts
    owner: backup
    group: backup
    mode: '0644'

# Set permissions for backup SSH keys
- name: Set permissions for backup SSH keys
  ansible.builtin.file:
    path: "/home/backup/.ssh/{{ item }}"
    state: file
    owner: backup
    group: backup
    mode: "{{ '0600' if item == 'id_rsa' else '0644' }}"
  with_items:
    - id_rsa
    - id_rsa.pub

# Ensure /home/backup/restore directory exists
- name: Ensure /home/backup/restore directory exists
  ansible.builtin.file:
    path: /home/backup/restore
    state: directory
    owner: backup
    group: backup
    mode: '0755'

# Ensure duplicity is installed
- name: Ensure duplicity is installed
  ansible.builtin.apt:
    name: duplicity
    state: present
    update_cache: yes
