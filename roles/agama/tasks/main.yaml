---
- name: Create /opt/agama directory
  ansible.builtin.file:
    path: /opt/agama
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download Agama files
  ansible.builtin.get_url:
    dest: "/opt/agama/{{ item.dest }}"
    url: "{{ item.url }}"
    mode: "0644"
  loop:
    - {
      dest: "agama.py",
      url: "https://raw.githubusercontent.com/hudolejev/agama/master/agama.py",
    }
    - {
      dest: "Dockerfile",
      url: "https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile",
    }

- name: Build Agama Docker image
  community.docker.docker_image:
    name: agama
    build:
      path: /opt/agama
      network: host
    source: build

- name: Create Agama Containers
  docker_container:
    name: "agama{{ item }}"
    image: agama
    env:
      AGAMA_DATABASE_URI: "mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@{{ mysql_host }}/{{ mysql_database }}"
    ports:
      - "{{ agama_start_port + (item - 1) }}:{{ agama_docker_port }}"
    restart_policy: always
  no_log: true
  loop: "{{ range(1, num_containers_per_machine|int + 1) }}"
  loop_control:
    loop_var: item

- name: Add CNAME for Agama containers
  community.general.nsupdate:
    server: "{{ hostvars[groups['dns_primary'][0]].ansible_default_ipv4.address }}"
    key_name: "nsupdate.key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ nsupdate_key_secret }}"
    zone: "{{ domain_name }}"
    type: CNAME
    value: "{{ hostvars[groups['agama'][item]]['ansible_hostname'] }}"
    record: "www-{{ item + 1 }}"
  loop: "{{ range( groups['agama'] | length ) }}"